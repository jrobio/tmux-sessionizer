#!/usr/bin/env bash
switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    # If someone wants to make this extensible, i'll accept
    # PR
    selected=$(find  ~ ~/projects ~/projects/repos ~/projects/work ~/.config ~/.local/bin ~/.local/share -mindepth 1 -maxdepth 1 -type d | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -e "$selected/pyproject.toml" ]] && [[ -z $VIRTUAL_ENV ]]; then
    selected_venv=$VIRTUAL_ENV
    
    if [[ -d "$selected/.venv" ]]; then
        selected_venv=".venv"
        source "$selected/$selected_venv/bin/activate"
    elif [[ -e "$selected/.pdm-python"]]; then
        selected_venv=$(sed -E 's|.*/([^/]+)/bin/python|\1|' $selected/.pdm-python)
        source "$WORKON_HOME/$selected_venv/bin/activate"
    elif [[ -d "$WORKON_HOME/$selected_name" ]]; then
        selected_venv=$selected_name
        source "$WORKON_HOME/$selected_venv/bin/activate"
    else
        selected_venv=$selected_name
        python -m venv "$WORKON_HOME/$selected_name"
        source "$WORKON_HOME/$selected_venv/bin/activate"
    fi

    if ! python -c "import ipykernel" &>/dev/null; then
        pip install ipykernel
        python -m ipykernel install --user --name $selected_venv
    fi
fi

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    if [ -n "$VIRTUAL_ENV" ]; then
        tmux new-session -s $selected_name -c $selected -e VIRTUAL_ENV="$VIRTUAL_ENV" -e VIRTUAL_ENV_PROMPT="$VIRTUAL_ENV_PROMPT"
    else
        tmux new-session -s $selected_name -c $selected
    fi
    hydrate $selected_name $selected
    exit 0
fi

if ! has_session $selected_name; then
    if [ -n "$VIRTUAL_ENV" ]; then
        tmux new-session -s $selected_name -c $selected -e VIRTUAL_ENV="$VIRTUAL_ENV" -e VIRTUAL_ENV_PROMPT="$VIRTUAL_ENV_PROMPT"
    else
        tmux new-session -s $selected_name -c $selected
    fi
    hydrate $selected_name $selected
fi

switch_to $selected_name
